server {
    listen 80;
    listen [::]:80;

    server_name [domain-name];
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://[domain-name]$request_uri;
    }
}

/* 
# uncoment this section after you perform "docker-compose run --rm certbot certonly .. " 
server {
    listen 443 default_server ssl http2;
    listen [::]:443 ssl http2;

    server_name [domain-name];
  
  	root /var/www/html;  
	index index.html index.php;  
    
    access_log off;  
	error_log /var/log/nginx/error.log error;  

	sendfile off;  

	client_max_body_size 100m;  
  
  	location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
  
  	location / {  
		try_files $uri $uri/ /index.php?$query_string;  
	}  

	location ~ /.well-known {
		auth_basic off;
		allow all;
	}

	location ~* ^.+\.(css|js|jpg|jpeg|gif|png|ico|gz|svg|svgz|ttf|otf|woff|woff2|eot|mp4|ogg|ogv|webm|webp|zip|swf|map)$ {
		add_header Access-Control-Allow-Origin "*";
		expires max;
		access_log off;
	}

	location ~ .php$ {  
		fastcgi_split_path_info ^(.+.php)(/.+)$;  
		fastcgi_pass php:9000;  
		fastcgi_index index.php;  
		include fastcgi_params;
		fastcgi_read_timeout 300;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;  
		fastcgi_intercept_errors off;  
		fastcgi_buffer_size 16k;  
		fastcgi_buffers 4 16k;  
	}  

	location ~ /.ht {  
		deny all;  
	}  
  
  	ssl_certificate /etc/letsencrypt/live/[domain-name]/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/[domain-name]/privkey.pem;
}
*/